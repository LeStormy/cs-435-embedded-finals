#include "variables.h"

const int despacitoBPM = 89;
const int despacitoSize = 43;
const int despacitoBassSize = 25;

const std::pair<float, float> despacito[43] = {
  std::make_pair(NOIRE, D),
  std::make_pair(NOIRE, Cd),
  std::make_pair(CROCHE, B),
  std::make_pair(CROCHE, Fd2),
  std::make_pair(DOUBLECROCHE, Fd2),
  std::make_pair(DOUBLECROCHE, Fd2),
  std::make_pair(DOUBLECROCHE, Fd2),
  std::make_pair(DOUBLECROCHE, Fd2),
  std::make_pair(DOUBLECROCHE, Fd2),
  std::make_pair(DOUBLECROCHE, B),
  std::make_pair(DOUBLECROCHE, B),
  std::make_pair(DOUBLECROCHE, B),
  std::make_pair(CROCHE, B),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(CROCHE, B),
  std::make_pair(DOUBLECROCHE, G2),
  std::make_pair(CROCHE, 1),
  std::make_pair(DOUBLECROCHE, G2),
  std::make_pair(DOUBLECROCHE, G2),
  std::make_pair(DOUBLECROCHE, G2),
  std::make_pair(DOUBLECROCHE, G2),
  std::make_pair(DOUBLECROCHE, G2),
  std::make_pair(DOUBLECROCHE, B),
  std::make_pair(DOUBLECROCHE, B),
  std::make_pair(DOUBLECROCHE, B),
  std::make_pair(CROCHE, B),
  std::make_pair(DOUBLECROCHE, Cd),
  std::make_pair(CROCHE, D),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(CROCHE, 1),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(DOUBLECROCHE, A),
  std::make_pair(DOUBLECROCHE, D),
  std::make_pair(DOUBLECROCHE, D),
  std::make_pair(DOUBLECROCHE, D),
  std::make_pair(CROCHE, D),
  std::make_pair(DOUBLECROCHE, E),
  std::make_pair(CROCHE, E),
  std::make_pair(CROCHE + DOUBLECROCHE + NOIRE, Cd),
  std::make_pair(CROCHE, 1),
};

const std::pair<float, float> despacitoBass[25] = {
  std::make_pair(BLANCHE, 1),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, Fd2 / 8),
  std::make_pair(CROCHE, B / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, Fd2 / 8),
  std::make_pair(CROCHE, B / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, G2 / 8),
  std::make_pair(CROCHE, B / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, G2 / 8),
  std::make_pair(CROCHE, B / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, Fd2 / 8),
  std::make_pair(CROCHE, A / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, Fd2 / 8),
  std::make_pair(CROCHE, A / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, Cd / 8),
  std::make_pair(CROCHE, E / 8),
  std::make_pair(NOIRE, 1),
  std::make_pair(CROCHE, Cd / 8),
  std::make_pair(CROCHE, E / 8),
};
